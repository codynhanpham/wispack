// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// warp_mc_R
double warp_mc_R(const double& s, const double& b, const double& w);
RcppExport SEXP _wispack_warp_mc_R(SEXP sSEXP, SEXP bSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(warp_mc_R(s, b, w));
    return rcpp_result_gen;
END_RCPP
}
// sigmoid_stable_R
double sigmoid_stable_R(const double& x);
RcppExport SEXP _wispack_sigmoid_stable_R(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sigmoid_stable_R(x));
    return rcpp_result_gen;
END_RCPP
}
// poly_sigmoid_R
double poly_sigmoid_R(const double& b, const int& deg, const NumericVector& Rt, const NumericVector& tslope, const NumericVector& tpoint);
RcppExport SEXP _wispack_poly_sigmoid_R(SEXP bSEXP, SEXP degSEXP, SEXP RtSEXP, SEXP tslopeSEXP, SEXP tpointSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const int& >::type deg(degSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Rt(RtSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type tslope(tslopeSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type tpoint(tpointSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_sigmoid_R(b, deg, Rt, tslope, tpoint));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_wspc();

static const R_CallMethodDef CallEntries[] = {
    {"_wispack_warp_mc_R", (DL_FUNC) &_wispack_warp_mc_R, 3},
    {"_wispack_sigmoid_stable_R", (DL_FUNC) &_wispack_sigmoid_stable_R, 1},
    {"_wispack_poly_sigmoid_R", (DL_FUNC) &_wispack_poly_sigmoid_R, 5},
    {"_rcpp_module_boot_wspc", (DL_FUNC) &_rcpp_module_boot_wspc, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_wispack(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
