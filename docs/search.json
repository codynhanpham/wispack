[{"path":"https://michaelbarkasi.github.io/wispack/articles/install.html","id":"linux","dir":"Articles","previous_headings":"","what":"Linux","title":"Installation instructions","text":"Linux (Ubuntu/Debian), additional system dependencies required building process: - libxml2 roxygen2 - r-base-dev, libnlopt-dev (libnlopt-cxx-dev) Rcpp, RcppEigen, StanHeaders PDF documentation generation, pdflatex also installed","code":"sudo apt install \\     libxml2 \\     r-base-dev \\     libnlopt-dev \\     libnlopt-cxx-dev \\     texlive-latex-base \\     texlive-fonts-recommended \\     texlive-fonts-extra \\     texlive-latex-extra"},{"path":"https://michaelbarkasi.github.io/wispack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Barkasi. Maintainer.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barkasi M (2025). wispack: Implements warped-sigmoid Poisson-process mixed-effects models (WSPmm). R package version 1.0, https://michaelbarkasi.github.io/wispack/.","code":"@Manual{,   title = {wispack: Implements warped-sigmoid Poisson-process mixed-effects models (WSPmm)},   author = {Michael Barkasi},   year = {2025},   note = {R package version 1.0},   url = {https://michaelbarkasi.github.io/wispack/}, }"},{"path":"https://michaelbarkasi.github.io/wispack/index.html","id":"introduction","dir":"","previous_headings":"","what":"Implements warped-sigmoid Poisson-process mixed-effects models (WSPmm)","title":"Implements warped-sigmoid Poisson-process mixed-effects models (WSPmm)","text":"Wispack (pronounced “wisp package” “wisp pack”) R package testing -group effects spatial variation spatial transcriptomics data, .e., functional spatial effects (FSE). True-color image fluorescing probes bound mRNA molecules cortical cells, raw data spatial transcriptomics. Unlike SVG testing (spatially variable gene) involves testing spatial variation gene expression within group, unlike differential expression (DE) analysis tests -group effects without regard spatial distribution, testing FSE involves testing whether factor age rearing conditions nonzero effect spatial variation groups differing factor. Comparison testing differentially expressed genes, spatially variable genes, genes function spatial effects. visualization purposes, mouse brain slices represent Wispack performs FSE testing first using change-point detection find spatial variation samples, fitting nonlinear mixed-effect model detected change points. core nonlinear model parameterization found change-points inflections logistic functions representing gradients gene expression change. Multiple change-points handled summing component logistic functions “poly-sigmoid” function. Fixed effects (age rearing conditions) modeled effects underlying logistic parameters. Random (within group) effects modeled nonlinear warping poly-sigmoid. Significance testing performed effects either bootstrapping MCMC resampling. complete technical description wisp models can found preprint. Demo plots functions involved wisp. () logistic function, used model single change point gene expression. (B) wisp poly-sigmoid function, built three logistic components, representing three change points. (C) warping function used represent random effects, e.g., variation due differences individual animals due measurement noise. (D) wisp poly-sigmoid (B) warping function applied. Wispack provides simple user-facing function, wisp(), takes data frame familiar format expected standard R functions linear models (e.g., lm() lmer()) runs complete test FSEs. Preprocessing data generally required passing wisp(), wisp() executes pipeline involving parameter estimates, prediction, model fitting, hypothesis testing. Top-level overview wisp modeling pipeline. shown figure , steps pipeline nonlinear recurrent. Full modeling pipeline wisp. Boxes represent variables model, operations performed variables. Arrows represent input-output relationships variables operations. Unlike standard linear modeling packages R require model formula, wisp() merely needs data. example, quick-start demo (uses data RORB expression across laminar axis primary somatosensory cortex) runs following code: model formula required, wisp models mathematical form. However, variables involved form can, course, different names. names come column names data can set manually user, : quick-start demo another demo showing model options can run using demo() command: Please see tutorials detailed walkthroughs package options. Copyright (C) 2025, Michael Barkasi barkasi@wustl.edu","code":"# Set random seed for reproducibility ran.seed <- 123 set.seed(ran.seed)  # Load wispack library(wispack)  # Load demo data countdata <- read.csv(system.file(   \"extdata\",    \"S1_laminar_countdata_demo_default_col_names.csv\",    package = \"wispack\"   ))  # Fit model laminar.model <- wisp(countdata)  # View model  View(laminar.model) # Define variables in the dataframe for the model data.variables <- list(     count = \"count\",     bin = \"bin\",      parent = \"cortex\",      child = \"gene\",     ran = \"mouse\",     fixedeffects = c(\"hemisphere\", \"age\")   )    # Fit model laminar.model <- wisp(     # Data to model     count.data = countdata,     # Variable labels     variables = data.variables   ) demo(\"quick_start\", package = \"wispack\")   demo(\"full_options\", package = \"wispack\")"},{"path":"https://michaelbarkasi.github.io/wispack/reference/analyze.residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze residuals from wisp fit — analyze.residuals","title":"Analyze residuals from wisp fit — analyze.residuals","text":"function takes vector mu.B sampled values variable X, single observation mu.obs variable, computes p-value mu.obs using empirical cumulative distribution function (ecdf) mu.B.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/analyze.residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze residuals from wisp fit — analyze.residuals","text":"","code":"analyze.residuals(wisp.results, verbose = TRUE)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/analyze.residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze residuals from wisp fit — analyze.residuals","text":"wisp.results List, output wisp function. verbose Logical, TRUE, prints information statistical analysis.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/analyze.residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze residuals from wisp fit — analyze.residuals","text":"Numeric p-value.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.sigmoid.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Make plot demonstrating how the wisp function is determined by the Rt, slope, and tpoint parameters — demo.sigmoid.plots","title":"Make plot demonstrating how the wisp function is determined by the Rt, slope, and tpoint parameters — demo.sigmoid.plots","text":"function takes user-provided values wisp function parameters produces panel plots showing wisp model determined Rt, slope, tpoint parameters.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.sigmoid.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make plot demonstrating how the wisp function is determined by the Rt, slope, and tpoint parameters — demo.sigmoid.plots","text":"","code":"demo.sigmoid.plots(   r = 4,   s = 1,   Rt = c(6, 3, 0.2, 6) * 4.65,   tslope = c(0.4, 0.75, 1),   tpoint = c(15, 38, 80) )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.sigmoid.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make plot demonstrating how the wisp function is determined by the Rt, slope, and tpoint parameters — demo.sigmoid.plots","text":"r Numeric, upper asymptote logistic (must single value). s Numeric, slope scalar inflection point (must single value). Rt Numeric vector, rate parameters wisp function. Degree wisp model length vector minus 1. tslope Numeric vector, slope scalars wisp function. Must one less length Rt. tpoint Numeric vector, transition points wisp function. Must one less length Rt.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.sigmoid.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make plot demonstrating how the wisp function is determined by the Rt, slope, and tpoint parameters — demo.sigmoid.plots","text":"Nothing. ggplot object printed console.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.warp.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Make plot demonstrating how the wisp function is warped by the warping factors — demo.warp.plots","title":"Make plot demonstrating how the wisp function is warped by the warping factors — demo.warp.plots","text":"function takes user-provided values wisp function parameters produces panel plots showing wisp model warped warping factors","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.warp.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make plot demonstrating how the wisp function is warped by the warping factors — demo.warp.plots","text":"","code":"demo.warp.plots(   w = 2,   point_pos = 60,   point_neg = 40,   Rt = c(6, 3, 0.2, 6) * 4.65,   tslope = c(0.4, 0.75, 1),   tpoint = c(15, 38, 80),   w_factors = c(0.6, -0.9, 0.5) )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.warp.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make plot demonstrating how the wisp function is warped by the warping factors — demo.warp.plots","text":"w Numeric, warping factor (must single value). point_pos Numeric, x coordinate place positive warp segment (must single value). point_neg Numeric, x coordinate place negative warp segment (must single value). Rt Numeric vector, rate parameters wisp function. Degree wisp model length vector minus 1. tslope Numeric vector, slope scalars wisp function. Must one less length Rt. tpoint Numeric vector, transition points wisp function. Must one less length Rt. w_factors Numeric vector, warping factors wisp function. Must length 3. First element warping factor Rt, second tslope, third tpoint. Note restrictive real wisp model, allows different warping factors across model components (Rt, tslope, tpoint), also across different elements within model component well.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/demo.warp.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make plot demonstrating how the wisp function is warped by the warping factors — demo.warp.plots","text":"Nothing. ggplot object printed console.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.bs.comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Visually compare normality and autocorrelation of bootstrap and MCMC parameter estimates — plot.MCMC.bs.comparison","title":"Visually compare normality and autocorrelation of bootstrap and MCMC parameter estimates — plot.MCMC.bs.comparison","text":"Function allowing visual comparison parameter estimates bootstrapping vs MCMC simulation. Shows density ten representative parameters bootstrapping MCMC walk, distributions Shapiro-Walk p-values bootstrapping vs MCMC walks, density autocorrelation results bootstrapping vs MCMC walks.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.bs.comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visually compare normality and autocorrelation of bootstrap and MCMC parameter estimates — plot.MCMC.bs.comparison","text":"","code":"# S3 method for class 'MCMC.bs.comparison' plot(wisp.results, verbose = TRUE)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.bs.comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visually compare normality and autocorrelation of bootstrap and MCMC parameter estimates — plot.MCMC.bs.comparison","text":"wisp.results List, output wisp function. verbose Logical, TRUE, prints information plotting.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.bs.comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visually compare normality and autocorrelation of bootstrap and MCMC parameter estimates — plot.MCMC.bs.comparison","text":"List ggplot objects containing plots representative parameter distributions, Shapiro-Wilk normality test results, autocorrelation plots bootstrap MCMC parameter estimates.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.walks.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sampling of random walks and negative log likelihood from MCMC simulations — plot.MCMC.walks","title":"Plot sampling of random walks and negative log likelihood from MCMC simulations — plot.MCMC.walks","text":"Function make nicely formatted histograms fitted parameters WISP results.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.walks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sampling of random walks and negative log likelihood from MCMC simulations — plot.MCMC.walks","text":"","code":"# S3 method for class 'MCMC.walks' plot(wisp.results, verbose = TRUE, low_samples = 10)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.walks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sampling of random walks and negative log likelihood from MCMC simulations — plot.MCMC.walks","text":"wisp.results List, output wisp function. verbose Logical, TRUE, prints information plotting. low_samples Integer, number low-value parameters plot. Defaults 10.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.MCMC.walks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sampling of random walks and negative log likelihood from MCMC simulations — plot.MCMC.walks","text":"List ggplot objects containing plots walks low-value parameters, high-value parameters, normalized negative log likelihood.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.child.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print rate-count, residual, and parameter plots for one child level together. — plot.child.summary","title":"Print rate-count, residual, and parameter plots for one child level together. — plot.child.summary","text":"Function summarize important information individual child level one plot.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.child.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print rate-count, residual, and parameter plots for one child level together. — plot.child.summary","text":"","code":"# S3 method for class 'child.summary' plot(wisp.results, these.parents = NULL, these.childs = NULL, verbose = TRUE)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.child.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print rate-count, residual, and parameter plots for one child level together. — plot.child.summary","text":"wisp.results List, output wisp function. .parents Character vector, optional, specifies parent levels summarize. Defaults . .childs Character vector, optional, specifies child levels summarize. Defaults . verbose Logical, TRUE, prints information plotting.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.child.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print rate-count, residual, and parameter plots for one child level together. — plot.child.summary","text":"Nothing, plots printed current graphics device.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.decomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual components of wisp fit for a single child level — plot.decomposition","title":"Plot individual components of wisp fit for a single child level — plot.decomposition","text":"Extension plot.ratecount plots individual pieces rate-count plot single child separately. Returns individual plots data points , fit lines , data points plus fit lines individual random levels.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.decomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual components of wisp fit for a single child level — plot.decomposition","text":"","code":"# S3 method for class 'decomposition' plot(wisp.results, child, log = FALSE, dim.boundaries = c(), y.lim = NULL)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.decomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual components of wisp fit for a single child level — plot.decomposition","text":"wisp.results List, output wisp function. child Character string, child level plot. Must provided, one time. log Logical, TRUE, plots log scale. Defaults FALSE. dim.boundaries Numeric vector, independent block boundaries plot comparison. empty, argument ignored. y.lim Numeric vector length 2, limits y-axis plots. NA, defaults automatic limits.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.decomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot individual components of wisp fit for a single child level — plot.decomposition","text":"List ggplot objects containing decomposed rate-count plots.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.effect.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot parameter distributions from WISP results as histograms — plot.effect.dist","title":"Plot parameter distributions from WISP results as histograms — plot.effect.dist","text":"Function make nicely formatted histograms fitted parameters WISP results.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.effect.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot parameter distributions from WISP results as histograms — plot.effect.dist","text":"","code":"# S3 method for class 'effect.dist' plot(wisp.results, verbose = TRUE)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.effect.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot parameter distributions from WISP results as histograms — plot.effect.dist","text":"wisp.results List, output wisp function. verbose Logical, TRUE, prints information plotting.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.effect.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot parameter distributions from WISP results as histograms — plot.effect.dist","text":"List ggplot objects containing histograms fitted parameters.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of wisp parameters — plot.parameters","title":"Plot of wisp parameters — plot.parameters","text":"Function make nicely formatted violin (bar) plots fitted wisp parameters, including confidence intervals stat information available.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of wisp parameters — plot.parameters","text":"","code":"# S3 method for class 'parameters' plot(   wisp.results,   child.lvl = NULL,   violin = TRUE,   print.plots = TRUE,   child.classes = NULL,   verbose = TRUE )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of wisp parameters — plot.parameters","text":"wisp.results List, output wisp function. child.lvl Character string, child level plotted. NULL, child levels plotted. violin Logical, TRUE, plots violin plots parameter; FALSE, uses bar plots. print.plots Logical, TRUE, prints plots console; FALSE, returns list plots without printing. child.classes List, list character vectors specifying child levels include together plots. NULL, child levels included single plot. verbose Logical, TRUE, prints updates plotting process.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of wisp parameters — plot.parameters","text":"List ggplot objects parameter plots.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.ratecount.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot fitted model and data — plot.ratecount","title":"Plot fitted model and data — plot.ratecount","text":"function takes wisp model results (fitted line) observed data (counts) plots together visual comparison. can also include independent block boundaries comparison provided.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.ratecount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot fitted model and data — plot.ratecount","text":"","code":"# S3 method for class 'ratecount' plot(   wisp.results,   pred.type = \"pred.log\",   count.type = \"count.log\",   dim.boundaries = c(),   print.all = FALSE,   y.lim = NA,   count.alpha.none = NA,   count.alpha.ran = NA,   pred.alpha.none = NA,   pred.alpha.ran = NA,   rans.to.print = c(),   childs.to.print = c(),   verbose = TRUE )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.ratecount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot fitted model and data — plot.ratecount","text":"wisp.results List, output wisp function. pred.type Character string, name predicted rate column count data (e.g., \"pred.log\" \"pred\"). count.type Character string, name observed count column count data (e.g., \"count.log\" \"count\"). dim.boundaries Numeric vector, independent block boundaries plot comparison. empty, argument ignored. print.Logical, TRUE, prints plots; FALSE, returns plots list without printing . y.lim Numeric vector length 2, limits y-axis plots. NA, defaults automatic limits. count.alpha.none Numeric, transparency count points random level \"none\". left NA, defaults 0.25. count.alpha.ran Numeric, transparency count points random level \"none\". left NA, defaults 0.25. pred.alpha.none Numeric, transparency predicted lines random level \"none\". left NA, defaults 1.0. pred.alpha.ran Numeric, transparency predicted lines random level \"none\". left NA, defaults 0.9. rans..print Character vector, list random levels include child plot. c(), random levels included. childs..print Character vector, list child levels place plot. c(), child levels plotted individually. verbose Logical, TRUE, prints updates plotting process.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/plot.ratecount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot fitted model and data — plot.ratecount","text":"List ggplot objects rate-count plots.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/pvalues.samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute p-values using ecdf from parameter resamples — pvalues.samples","title":"Compute p-values using ecdf from parameter resamples — pvalues.samples","text":"function takes vector mu.B sampled values variable X, single observation mu.obs variable, computes p-value mu.obs using empirical cumulative distribution function (ecdf) mu.B.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/pvalues.samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute p-values using ecdf from parameter resamples — pvalues.samples","text":"","code":"pvalues.samples(mu.B, mu.obs)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/pvalues.samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute p-values using ecdf from parameter resamples — pvalues.samples","text":"mu.B Numeric vector sampled values variable X, e.g., bootstrapped MCMC estimates, used make empirical cumulative distribution function (ecdf). mu.obs Numeric value observed variable X, e.g., mean mu.B actual observation.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/pvalues.samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute p-values using ecdf from parameter resamples — pvalues.samples","text":"Numeric p-value.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/sample.stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate p-values and confidence intervals from resampled parameters — sample.stats","title":"Estimate p-values and confidence intervals from resampled parameters — sample.stats","text":"Runs statistical analysis resampled parameters wisp function. computes p-values confidence intervals parameter, adjusting multiple comparisons using either Bonferroni correction Holm-Bonferroni method.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/sample.stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate p-values and confidence intervals from resampled parameters — sample.stats","text":"","code":"sample.stats(   wisp.results,   alpha = 0.05,   Bonferroni = FALSE,   conv.resamples.only = TRUE,   verbose = TRUE )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/sample.stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate p-values and confidence intervals from resampled parameters — sample.stats","text":"wisp.results List, output wisp function. alpha Numeric value giving significance level p-values confidence intervals. Default 0.05. Bonferroni Logical, TRUE, uses Bonferroni correction multiple comparisons; FALSE, uses Holm-Bonferroni method. Default FALSE. conv.resamples.Logical, TRUE, resamples converged fit used statistical analysis; FALSE, resamples used. Default TRUE. verbose Logical, TRUE, prints information statistical analysis.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/sample.stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate p-values and confidence intervals from resampled parameters — sample.stats","text":"Data frame giving, parameter, name, estimate, confidence interval (CI.low, CI.high), p-value, adjusted p-value (p.value.adj), adjusted alpha (alpha.adj), significance level (significance).","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit wisp to count data — wisp","title":"Fit wisp to count data — wisp","text":"function takes data frame wisp variables (columns) fits wisp model . Statistical analyses plots generated fitted model.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit wisp to count data — wisp","text":"","code":"wisp(   count.data,   variables = list(),   use.median = FALSE,   MCMC.settings = list(),   bootstraps.num = 0,   converged.resamples.only = TRUE,   max.fork = 1,   dim.bounds = c(),   verbose = TRUE,   print.child.summaries = TRUE,   model.settings = list() )"},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit wisp to count data — wisp","text":"count.data Data.frame, data modeled, columns model variables (count, bin, parent, child, ran, fixedeffects), equivalent variables specified variables argument. variables List, names columns count.data correspond model variables. list contain (necessarily ) named elements: count, bin, parent, child, ran, fixedeffects. use.median Logical, TRUE, median resamples used final parameter estimates; FALSE, initial fit L-BFGS used. MCMC.settings List, settings MCMC simulation, including MCMC.burnin, MCMC.steps, MCMC.step.size, MCMC.prior, MCMC.neighbor.filter. Default values provided. bootstraps.num Integer, number bootstrap resamples perform. 0, MCMC run. converged.resamples.Logical, TRUE, resamples converged fit used statistical analysis; FALSE, resamples used. Applies bootstraps. max.fork Integer, maximum number parallel processes use bootstrapping. dim.bounds Numeric vector, block boundaries plotting rate-count plots. empty, argument ignored. verbose Logical, TRUE, prints information fitting process. print.child.summaries Logical, TRUE, prints summaries child level. model.settings List, settings C++ model, including buffer_factor, ctol, max_penalty_at_distance_factor, LROcutoff, LROwindow_factor, rise_threshold_factor, max_evals, rng_seed, warp_precision. Default values provided.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit wisp to count data — wisp","text":"List giving results fitted model, including: model.component.list, count.data.summed, fitted.parameters, gamma.disperson, param.names, fix, treatment, grouping.variables, param.idx0, settings, sample.params, sample.params.bs, sample.params.MCMC, diagnostics.bs, diagnostics.MCMC, stats, plots","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.sigmoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Wisp sigmoid function, implemented in R — wisp.sigmoid","title":"Wisp sigmoid function, implemented in R — wisp.sigmoid","text":"function provides R implementation wisp sigmoid function. assumes parameters Rt, tslope, tpoint already warped wisp.warp.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.sigmoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wisp sigmoid function, implemented in R — wisp.sigmoid","text":"","code":"wisp.sigmoid(x, Rt, tslope, tpoint)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.sigmoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wisp sigmoid function, implemented in R — wisp.sigmoid","text":"x Numeric, input spatial position, either scalar, vector, 2D array/matrix Rt Numeric vector, rate parameters wisp function. Degree wisp model length vector minus 1. tslope Numeric vector, slope scalars wisp function. Must one less length Rt. tpoint Numeric vector, transition points wisp function. Must one less length Rt.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.sigmoid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wisp sigmoid function, implemented in R — wisp.sigmoid","text":"Numeric vector matrix, wisp sigmoid values given input. Returned object dimensions input x.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.warp.html","id":null,"dir":"Reference","previous_headings":"","what":"Wisp warping function, implemented in R — wisp.warp","title":"Wisp warping function, implemented in R — wisp.warp","text":"function provides R implementation warping function used warp model components input wisp.sigmoid.","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.warp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wisp warping function, implemented in R — wisp.warp","text":"","code":"wisp.warp(z, b, w)"},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.warp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wisp warping function, implemented in R — wisp.warp","text":"z Numeric vector matrix, values warp. Scalar values fine well. Matrix must 2D. b Numeric, warping bound (must single value). w Numeric, warping factor (must single value).","code":""},{"path":"https://michaelbarkasi.github.io/wispack/reference/wisp.warp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wisp warping function, implemented in R — wisp.warp","text":"Numeric vector matrix, warped values. Returned object dimensions input z.","code":""}]
